Implement a program for stack that performs following operations
using array.
a. PUSH
b. POP
c. PEEP
d. CHANGE
e. DISPLAY

#include <stdio.h>
#include <stdlib.h>

#define SIZE 5  // Define the size of the stack

int stack[SIZE];
int top = -1;   // Initialize top to -1 indicating an empty stack

// Function to push an element onto the stack
void push(int element) {
    if (top == SIZE - 1) {
        printf("Stack Overflow! Cannot push element.\n");
    } else {
        top++;
        stack[top] = element;
        printf("Element %d pushed onto stack.\n", element);
    }
}

// Function to pop an element from the stack
void pop() {
    if (top == -1) {
        printf("Stack Underflow! No element to pop.\n");
    } else {
        printf("Element %d popped from stack.\n", stack[top]);
        top--;
    }
}

// Function to peep at an element in the stack at a specific position
void peep(int position) {
    if (top - position + 1 < 0 || position <= 0) {
        printf("Invalid position! Please enter a valid position.\n");
    } else {
        printf("Element at position %d from top is: %d\n", position, stack[top - position + 1]);
    }
}

// Function to change an element at a specific position in the stack
void change(int position, int newValue) {
    if (top - position + 1 < 0 || position <= 0) {
        printf("Invalid position! Please enter a valid position.\n");
    } else {
        stack[top - position + 1] = newValue;
        printf("Element at position %d changed to %d.\n", position, newValue);
    }
}

// Function to display the stack
void display() {
    if (top == -1) {
        printf("Stack is empty.\n");
    } else {
        printf("Stack elements are:\n");
        for (int i = top; i >= 0; i--) {
            printf("%d\n", stack[i]);
        }
    }
}

int main() {
    int choice, element, position, newValue;

    do {
        printf("\nMenu:\n");
        printf("1. PUSH\n");
        printf("2. POP\n");
        printf("3. PEEP\n");
        printf("4. CHANGE\n");
        printf("5. DISPLAY\n");
        printf("6. EXIT\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter element to push: ");
                scanf("%d", &element);
                push(element);
                break;
            case 2:
                pop();
                break;
            case 3:
                printf("Enter position from top to peep (1 being the top): ");
                scanf("%d", &position);
                peep(position);
                break;
            case 4:
                printf("Enter position from top to change (1 being the top): ");
                scanf("%d", &position);
                printf("Enter new value: ");
                scanf("%d", &newValue);
                change(position, newValue);
                break;
            case 5:
                display();
                break;
            case 6:
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice! Please try again.\n");
        }
    } while (choice != 6);

    return 0;
}
